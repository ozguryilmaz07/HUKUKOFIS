@model OpenLawOffice.Web.ViewModels.Assets.AssetViewModel

@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Edit Asset";
    ViewBag.PageTitle = "Edit Asset";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Matters">Matters</a></li>
        <li>Matter: <a href="/Matters/Details/@(ViewBag.Matter.Id)">@(ViewBag.Matter.Title)</a></li>
        <li><a href="/Matters/Assets/@(ViewBag.Matter.Id)">Assets</a></li>
        <li><a href="/Assets/Details/@(Model.Id)">@(Model.Title)</a></li>
        <li><a href="/Assets/Edit/@(Model.Id)" class="active">Edit</a></li>
    </ul>
}

<script type="text/javascript" src="/Scripts/moment.min.js"></script>

<script language="javascript">
    $(document).ready(function () {
        $('#datepicker').datetimepicker({
            format: 'l'
        });
        $('#discodatepicker').datetimepicker({
            format: 'l LT'
        });

        //var tags = @(Html.Raw(ViewBag.TagJson));
        //$('#Tags').tagsinput({
        //    allowDuplicates: true,
        //    itemValue: 'Id',
        //    itemText: 'Name',
        //    freeInput: true,
        //    //typeahead: {
        //    //    displayKey: 'Name',
        //    //    source: function(query) {
        //    //        return tags;
        //    //    }
        //    //}
        //});
        //$('#Tags').on('itemAdded', function(event) {
        //    setTimeout(function(){
        //        $(">input[type=text]",".bootstrap-tagsinput").val("");
        //    }, 1);
        //});
    });
</script>

<div class="container-fluid">
    <div class="row text-right">
        <div class="btn-group">
            @if (Model.CheckedOutAt.HasValue)
            {
                <button type="button" class="btn btn-sm btn-primary" onclick="navTo('/Assets/Checkin/@(Model.Id)')"><span class="fa fa-unlock"></span> Checkin</button>
            }
            else
            {
                <button type="button" class="btn btn-sm btn-primary" onclick="navTo('/Assets/Checkout/@(Model.Id)')"><span class="fa fa-lock"></span> Checkout</button>
            }
        </div>
        <div class="btn-group">
            @if (!Model.IsFinal)
            {
                <button type="button" id="new" class="btn btn-sm btn-primary" onclick="navTo('/Versions/Create/@(Model.Id)')"><span class="fa fa-plus"></span> New Version</button>
            }
            <button type="button" id="details" class="btn btn-sm btn-primary" onclick="navTo('/Assets/Details/@(Model.Id)')"><span class="fa fa-info"></span> Detail</button>
            <button type="button" id="edit" class="btn btn-sm btn-primary" onclick="navTo('/Assets/Edit/@(Model.Id)')"><span class="fa fa-pencil"></span> Edit</button>
            <button type="button" id="list" class="btn btn-sm btn-primary" onclick="navTo('/Matters/Assets/@(ViewBag.Matter.Id)')"><span class="fa fa-list"></span> List</button>
        </div>
    </div>
</div>

<h2>@(Model.Title)</h2>
@using (Html.BeginForm())
{
    @(Html.ValidationSummary(true))

    <div class="panel panel-default">
        <div class="panel-heading">Asset Information</div>
        <div class="panel-body">
            <div class="form-group">
                <span class="control-label col-sm-4">
                    Date
                </span>
                <div class="col-sm-8">
                    <div class='input-group date' id='datepicker'>
                        @(Html.TextBoxFor(model => model.Date, new { @class = "form-control" }))
                        <span class="input-group-addon">
                            <span class="fa fa-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-4">
                    Title<span class="required-field" title="Required Field">*</span>
                </span>
                <div class="col-sm-8">
                    @(Html.TextBoxFor(m => m.Title, new { @class = "form-control" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-4">
                    Finalized
                </span>
                <div class="col-sm-8">
                    @(Html.CheckBoxFor(model => model.IsFinal, new { @Checked = true, @class = "form-control", @style = "width: 50px; display: inline;" }))
                    Check to indicate this asset has reached its final version
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-4">
                    Filed with Court
                </span>
                <div class="col-sm-8">
                    @(Html.CheckBoxFor(model => model.IsCourtFiled, new { @Checked = false, @class = "form-control", @style = "width: 50px; display: inline;" }))
                    Check to indicate this asset has been filed with a Court
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-4">
                    Attorney Work Product
                </span>
                <div class="col-sm-8">
                    @(Html.CheckBoxFor(model => model.IsAttorneyWorkProduct, new { @Checked = false, @class = "form-control", @style = "width: 50px; display: inline;" }))
                    Check to indicate this asset is Attorney Work Product
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-4">
                    Privileged
                </span>
                <div class="col-sm-8">
                    @(Html.CheckBoxFor(model => model.IsPrivileged, new { @Checked = false, @class = "form-control", @style = "width: 50px; display: inline;" }))
                    Check to indicate this asset is Privileged
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-4">
                    Discoverable
                </span>
                <div class="col-sm-8">
                    @(Html.CheckBoxFor(model => model.IsDiscoverable, new { @Checked = false, @class = "form-control", @style = "width: 50px; display: inline;" }))
                    Check to indicate this asset is Discoverable
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-4">
                    When provided in discovery
                </span>
                <div class="col-sm-8">
                    <div class='input-group date' id='discodatepicker'>
                        @(Html.TextBoxFor(model => model.ProvidedInDiscoveryAt, new { @class = "form-control" }))
                        <span class="input-group-addon">
                            <span class="fa fa-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-4">
                    Tags
                </span>
                <div class="col-sm-8">
                    <input id="Tags" name="@(Html.NameFor(model => model.Tags))" value="@(string.Join(", ", Model.Tags.Select(f => f.Name)))" data-role="tagsinput" type="text" class="form-control" autocomplete="off" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-4 col-sm-8">
                    <button type="submit" class="btn btn-default text-center media-middle center-block">Submit</button>
                </div>
            </div>
        </div>
    </div>

}