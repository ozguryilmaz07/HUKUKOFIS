@model IEnumerable<OpenLawOffice.Web.ViewModels.Timing.TimeViewModel>

@{ 
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Time Entries for Task";
    ViewBag.PageTitle = "Time Entries for Task";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Matters">Matters</a></li>
        <li>Matter: <a href="/Matters/Details/@(ViewBag.Matter.Id)">@(ViewBag.Matter.Title)</a></li>
        <li><a href="/Matters/Tasks/@(ViewBag.Matter.Id)">Tasks</a></li>
        <li>Task: <a href="/Tasks/Details/@(ViewBag.Task.Id)">@(ViewBag.Task.Title)</a></li>
        <li><a href="/Tasks/Time/@(ViewBag.Task.Id)">Time Entries</a></li>
    </ul>
}
    
<div class="container-fluid">
    <div class="row text-right">
        <div class="btn-group">
            <button type="button" class="btn btn-sm btn-primary" onclick="navTo('/TaskTime/SelectContactToAssign?TaskId=@(ViewBag.Task.Id)')"><span class="fa fa-plus"></span> New Entry</button>
        </div>
    </div>
</div>

@{ double totalMinutes = 0;}

<div class="panel panel-default">
    <div class="panel-heading">
        Time Entries for Task
    </div>
    <div class="panel-body">
        <table class="table table-striped table-condensed table-hover table-text-small">
            <thead>
                <tr>
                    <th class="text-center">
                        Start
                    </th>
                    <th class="text-center">
                        Stop
                    </th>
                    <th class="text-center">
                        Duration
                    </th>
                    <th class="text-center">
                        Worker
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                totalMinutes += item.Duration.TotalMinutes;
                <tr>
                    <td>
                        @(item.Start)
                    </td>
                    <td>
                        @(item.Stop)
                    </td>
                    <td>
                        @(Math.Round(item.Duration.TotalMinutes, 0))
                        min.
                    </td>
                    <td>
                        @(Html.ActionLink(item.Worker.DisplayName, "Details", "Contacts", new { id = item.Worker.Id }, null))
                    </td>
                    <td class="text-right">
                        <button type="button" class="btn btn-xs btn-default" onclick="navTo('/Timing/Edit/@(item.Id.Value)')">
                            <span class="fa fa-pencil"></span> Edit
                        </button>
                        <button type="button" class="btn btn-xs btn-default" onclick="navTo('/Timing/Details/@(item.Id.Value)')">
                            <span class="fa fa-clock-o"></span> Detail
                        </button>
                    </td>
                </tr>
            }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2" style="text-align: right; font-weight: bold;">
                        Total Time:
                    </td>
                    <td style="text-align: center; font-weight: bold;">
                        @(Math.Round(totalMinutes, 0))
                        min.
                    </td>
                    <td colspan="2"></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>