@model OpenLawOffice.Web.ViewModels.Tasks.PhoneCallViewModel
@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Phone Call";
    ViewBag.PageTitle = "Phone Call";
}
<script type="text/javascript" src="/Scripts/moment.min.js"></script>
<script type="text/javascript" src="/Scripts/tinymce/tinymce.min.js"></script>
<script language="javascript">
    $(document).ready(function () {
        tinymce.init({
            selector: "#TaskAndNoteDetails",
            theme: "modern",
            toolbar: "insertfile undo redo | styleselect | bold underline italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
        });
        $("#MakeTime").click(function () {
            $("#StartRow").toggle(this.checked);
            $("#StopRow").toggle(this.checked);
            $("#BillableRow").toggle(this.checked);
        })
        $("#MakeNote").click(function () {
            $("#NoticesRow").toggle(this.checked);
            if ($("#MakeNote").prop('checked'))
                $("#NoteAndTaskLabel").text("Note & Task Details");
            else
                $("#NoteAndTaskLabel").text("Task Details");
        })
        $('#ClearNoticeButton').click(function () {
            $('#NotifyContactIds').val([]);
        });
    });
</script>

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Matters">Matters</a></li>
        <li>Matter: <a href="/Matters/Details/@(ViewBag.Matter.Id)">@(ViewBag.Matter.Title)</a></li>
        <li><a href="/Matters/Tasks/@(ViewBag.Matter.Id)">Tasks</a></li>
        <li><a href="/Tasks/PhoneCall/@(ViewBag.Matter.Id)">Phone Call</a></li>
    </ul>
}

@{
    int contactId = 0;
    dynamic profile = System.Web.Profile.ProfileBase.Create(Membership.GetUser().UserName);

    if (profile.ContactId != null && !string.IsNullOrEmpty(profile.ContactId))
    {
        contactId = int.Parse(profile.ContactId);
    }

    if (contactId <= 0)
    {
        <p>
            Your profile must be configured before using this page.  Please click "My Profile" under settings.
        </p>
    }
    else
    {
        using (Html.BeginForm())
        {
            @(Html.ValidationSummary(true))
            
            <div class="panel panel-default">
                <div class="panel-heading">
                    Phone Call Details
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <span class="control-label col-sm-2">
                            Create Time Entry<span class="required-field" title="Required Field">*</span>
                        </span>
                        <div class="col-sm-10">
                            @(Html.CheckBoxFor(model => model.MakeTime, new { @Checked = true, @class = "form-control", @style = "width: 50px; display: inline;" }))
                            Check to create a time entry.
                        </div>
                    </div>
                    <div class="form-group">
                        <span class="control-label col-sm-2">
                            Create Note<span class="required-field" title="Required Field">*</span>
                        </span>
                        <div class="col-sm-10">
                            @(Html.CheckBoxFor(model => model.MakeNote, new { @Checked = true, @class = "form-control", @style = "width: 50px; display: inline;" }))
                            Check to create a note.
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            <span class="control-label col-sm-2">
                                Time Category
                            </span>
                            <div class="col-sm-5">
                                @(Html.DropDownListFor(model => model.TimeCategory.Id,
                        new SelectList(ViewBag.TimeCategoryList, "Id", "Title"),
                        new { @size = 1, @class = "form-control", @style = "width: 100%" }))
                            </div>
                        </div>
                    </div>
                    <div id="StartRow" class="form-group">
                        <span class="control-label col-sm-2">
                            Start Date/Time<span class="required-field" title="Required Field">*</span>
                        </span>
                        <div class="col-sm-10">
                            @(Html.TextBoxFor(model => model.Start, new { @Value = Model.Start.ToString("M/d/yyyy h:mm tt") }))
                        </div>
                    </div>
                    <div id="StopRow" class="form-group">
                        <span class="control-label col-sm-2">
                            Stop Date/Time<span class="required-field" title="Required Field">*</span>
                        </span>
                        <div class="col-sm-10">
                            @(Html.TextBoxFor(model => model.Stop, new { @Value = Model.Stop.ToString("M/d/yyyy h:mm tt") }))
                            <img id="timeadvance" src="../../Content/fugue-icons-3.5.6/icons-shadowless/hourglass-select.png" style="cursor: pointer" alt="Advance Time" />
                            <script language="javascript">
                            $(document).ready(function () {
                                $('#timeadvance').click(function () {
                                    var stop, duration;
                                    var start = moment($('#Start').val());

                                    if (moment($('#Start').val()) > moment()) { // time entry in the future, must treat differently
                                        stop = moment(start).add(6, 'minutes').format('M/D/YYYY h:mm A');
                                    }
                                    else {
                                        if ($('#Stop').val() == '') {
                                            duration = moment().diff(start, 'minutes');
                                        }
                                        else {
                                            stop = moment($('#Stop').val());
                                            duration = stop.diff(start, 'minutes');
                                        }
                                        var minutesToAdd = 6 - (duration % 6);
                                        stop = moment(stop).add(minutesToAdd, 'minutes').format('M/D/YYYY h:mm A');
                                    }
                                    $('#Stop').val(stop)
                                });
                            });
                            </script>
                        </div>
                    </div>
                    <div id="BillableRow" class="form-group">
                        <span class="control-label col-sm-2">
                            Billable<span class="required-field" title="Required Field">*</span>
                        </span>
                        <div class="col-sm-10">
                            @(Html.CheckBoxFor(model => model.Billable, new { @Checked = true, @class = "form-control", @style = "width: 50px; display: inline;" }))
                            Check if time is billable.
                        </div>
                    </div>
                    <div class="form-group">
                        <span class="control-label col-sm-2">
                            Title<span class="required-field" title="Required Field">*</span>
                        </span>
                        <div class="col-sm-10">
                            @(Html.TextBoxFor(m => m.Title, new { @class = "form-control" }))
                        </div>
                    </div>
                    <div class="form-group">
                        <span class="control-label col-sm-2">
                            Time Entry Details<span class="required-field" title="Required Field">*</span>
                        </span>
                        <div class="col-sm-10">
                            @(Html.TextAreaFor(m => m.TimeDetails, new { @class = "form-control", @style = "height: 50px;" }))
                        </div>
                    </div>
                    <div id="NoticesRow" class="form-group">
                        <span class="control-label col-sm-2">
                            Send Notice To<br />
                            <button type="button" name="ClearNoticeButton" id="ClearNoticeButton" class="btn btn-default">Clear Notices</button>
                        </span>
                        <div class="col-sm-10">
                            @(Html.ListBoxFor(x => x.NotifyContactIds,
                            new SelectList(Model.EmployeeContactList, "Id", "DisplayName"),
                            new { @size = 5, @class = "form-control", @style = "width: 100%" }))
                        </div>
                    </div>
                    <div class="form-group">
                        <span class="control-label col-sm-2">
                            <span id="NoteAndTaskLabel">Note & Task Details</span>
                            <span class="required-field" title="Required Field">*</span>
                        </span>
                        <div class="col-sm-10">
                            @(Html.TextAreaFor(m => m.TaskAndNoteDetails, new { @class = "form-control", @style = "height: 50px;" }))
                        </div>
                    </div>
                </div>
            </div>

            <p>
                <button type="submit" class="btn btn-lg btn-default">Submit</button>
            </p>
        }
    }
}