@model OpenLawOffice.Web.ViewModels.Tasks.TaskViewModel

@{ 
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Edit Task";
    ViewBag.PageTitle = "Edit Task";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Matters">Matters</a></li>
        <li>Matter: <a href="/Matters/Details/@(Model.Id)">@(Model.Title)</a></li>
        <li><a href="/Matters/Tasks/@(ViewBag.Matter.Id)">Matters</a></li>
        <li>Task: <a href="/Tasks/Details/@(Model.Id)">@(Model.Title)</a></li>
        <li><a href="/Tasks/Edit/@(Model.Id)">Edit</a></li>
    </ul>
}
<script type="text/javascript" src="/Scripts/tinymce/tinymce.min.js"></script>
    
<script language="javascript">
    $(document).ready(function () {
        tinymce.init({
            selector: "#Description",
            theme: "modern",
            toolbar: "insertfile undo redo | styleselect | bold underline italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
        });
        $('#duedatepicker').datetimepicker({
            format: 'l LT'
        });
    });
</script>

<div class="container-fluid">
    <div class="row text-right">
        @if (Model.Active)
        {
            <div class="btn-group">
                <div class="btn-group">
                    <button type="button" class="btn btn-sm btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Close <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-right">
                        <li><a href="/Tasks/CloseWithNewTask/@(Model.Id)">Create New Task</a></li>
                        <li><a href="/Tasks/Close/@(Model.Id)">No New Task</a></li>
                    </ul>
                </div>
            </div>
        }
        <div class="btn-group">
            <button type="button" id="new" class="btn btn-sm btn-primary" onclick="navTo('/Tasks/Create?MatterId=@(ViewBag.Matter.Id)')"><span class="fa fa-plus"></span> New Task</button>
            <button type="button" id="details" class="btn btn-sm btn-primary" onclick="navTo('/Tasks/Details/@(Model.Id)')"><span class="fa fa-info"></span> Detail</button>
            <button type="button" id="edit" class="btn btn-sm btn-primary" onclick="navTo('/Tasks/Edit/@(Model.Id)')"><span class="fa fa-pencil"></span> Edit</button>
            <button type="button" id="list" class="btn btn-sm btn-primary" onclick="navTo('/Matters/Tasks/@(ViewBag.Matter.Id)')"><span class="fa fa-list"></span> List</button>
        </div>
        <div class="btn-group">
            <button type="button" id="contacts" class="btn btn-sm btn-primary" onclick="navTo('/Tasks/Contacts/@(Model.Id)')"><span class="fa fa-user"></span> Contacts</button>
            <button type="button" id="notes" class="btn btn-sm btn-primary" onclick="navTo('/Tasks/Notes/@(Model.Id)')"><span class="fa fa-sticky-note-o"></span> Notes</button>
            <button type="button" id="time" class="btn btn-sm btn-primary" onclick="navTo('/Tasks/Time/@(Model.Id)')"><span class="fa fa-clock-o"></span> Time</button>
        </div>
    </div>
</div>
            
@using (Html.BeginForm())
    {
@(Html.ValidationSummary(true))
    <div class="panel panel-default">
        <div class="panel-heading">
            Task Assignment Details
        </div>
        <div class="panel-body">
            <div class="form-group">
                <span class="control-label col-sm-2">
                    Title<span class="required-field" title="Required Field">*</span>
                </span>
                <div class="col-sm-10">
                    @(Html.TextBoxFor(m => m.Title, new { @class = "form-control" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-2">
                    Description<span class="required-field" title="Required Field">*</span>
                </span>
                <div class="col-sm-10">
                    @(Html.TextAreaFor(m => m.Description, new { @class = "form-control", @style = "height: 300px;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-2">
                    Active<span class="required-field" title="Required Field">*</span>
                </span>
                <div class="col-sm-10">
                    @(Html.CheckBoxFor(model => model.Active, new { @Checked = true, @class = "form-control", @style = "width: 50px; display: inline;" }))
                    A check indicates there is something left to complete.  Once completed, uncheck.
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-2">
                    Due Date
                </span>
                <div class="col-sm-10">
                    <div class='input-group date' id='duedatepicker'>
                        @(Html.TextBoxFor(model => model.DueDate, new { @class = "form-control" }))
                        <span class="input-group-addon">
                            <span class="fa fa-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <p>
        <button type="submit" class="btn btn-lg btn-default">Submit</button>
    </p>
}