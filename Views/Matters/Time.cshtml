@model OpenLawOffice.Web.ViewModels.Matters.MatterTimeViewModel

@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Time Entries within Matter";
    ViewBag.PageTitle = "Time Entries within Matter";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Matters">Matters</a></li>
        <li>Matter: <a href="/Matters/Details/@(ViewBag.Matter.Id)">@(ViewBag.Matter.Title)</a></li>
        <li><a href="/Matters/Time/@(ViewBag.Matter.Id)" class="active">Time Entries</a></li>
    </ul>
}

@foreach (var task in Model.Tasks)
{
    double totalMinutes = 0;

    <div class="panel panel-default">
        <div class="panel-heading">
            @(Html.ActionLink(task.Title, "Details", "Tasks", new { id = task.Id }, null))
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed table-hover table-text-small">
                <thead>
                    <tr>
                        <th style="text-align: center;">
                            Start
                        </th>
                        <th style="text-align: center;">
                            Stop
                        </th>
                        <th style="text-align: center;">
                            Duration
                        </th>
                        <th style="text-align: center;">
                            Worker
                        </th>
                        <th>
                        </th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var item in task.Times)
                {
                    totalMinutes += item.Duration.TotalMinutes;

                    <tr>
                        <td>
                            @(item.Start)
                        </td>
                        <td>
                            @(item.Stop)
                        </td>
                        <td>
                            @(Math.Round(item.Duration.TotalMinutes, 0))
                            min.
                        </td>
                        <td>
                            @(Html.ActionLink(item.Worker.DisplayName, "Details", "Contacts", new { id = item.Worker.Id.Value }, null))
                        </td>
                        <td style="text-align: right;">
                            <button type="button" class="btn btn-xs btn-default" onclick="navTo('/Timing/Edit/@(item.Id)')"><span class="fa fa-pencil"></span> Edit</button>
                            <button type="button" class="btn btn-xs btn-default" onclick="navTo('/Timing/Details/@(item.Id)')"><span class="fa fa-clock-o"></span> View</button>
                        </td>
                    </tr>
                }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="2" style="text-align: right; font-weight: bold;">
                            Total Time:
                        </td>
                        <td style="text-align: center; font-weight: bold;">
                            @(Math.Round(totalMinutes, 0))
                            min.
                        </td>
                        <td colspan="2"></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
}