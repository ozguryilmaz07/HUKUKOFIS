@model OpenLawOffice.Web.ViewModels.Billing.GroupInvoiceViewModel
@using OpenLawOffice.Web.Helpers

@{ 
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Bill a Group";
    ViewBag.PageTitle = "Bill a Group";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Billing">Billing</a></li>
        <li><a href="/Billing/SingleGroupBill/@(ViewContext.RouteData.Values["Id"])" class="active">Group Billing</a></li>
    </ul>
}

<script>
    var vars = [], hash;
    var q = document.URL.split('?')[1];
    if (q != undefined) {
        q = q.split('&');
        for (var i = 0; i < q.length; i++) {
            hash = q[i].split('=');
            vars.push(hash[1]);
            vars[hash[0]] = hash[1];
        }
    }
    $(function () {
        if (vars['RateFrom'] != null)
            $('#RateFrom').val(vars['RateFrom']);
        if (vars['StartDate'] != null)
            $('#StartDate').val(vars['StartDate']);
        if (vars['StopDate'] != null)
            $('#StopDate').val(vars['StopDate']);
        $("#Date").datepicker({
            autoSize: true
        });
        $("#Due").datepicker({
            autoSize: true
        });
        $("#BillingGroup_NextRun").datepicker({
            autoSize: true
        });
        $("#StartDate").datepicker({
            autoSize: true
        });
        $("#StopDate").datepicker({
            autoSize: true
        });
        $("#RateFrom").change(function () {
            go();
        });
        $("#StartDate").change(function () {
            go();
        });
        $("#StopDate").change(function () {
            go();
        });
    });
    function go() {
        var href;
        var startDate = $('#StartDate').val().trim();
        var stopDate = $('#StopDate').val().trim();
        var base;
        var qMarkAt = window.location.href.lastIndexOf('?');
        if (qMarkAt > 0)
            base = window.location.href.substr(0, qMarkAt);
        else
            base = window.location.href;

        href = base + '?RateFrom=' + $("#RateFrom").val();

        if (startDate.length > 0)
            href += '&StartDate=' + startDate;
        if (stopDate.length > 0)
            href += '&StopDate=' + stopDate;

        window.location.href = href;
    };
</script>
    
@using (Html.BeginForm())
{
    if (!ViewContext.ViewData.ModelState.IsValid)
    {
        <div style="color: #ff0000; font-weight: bold;">Please correct the fields with errors below.  The fields with errors are denoted with red shading.  Once corrected, please click save to again attempt to save the invoice.</div>
        <br />
    }

    <div style="width: 1200px; border: 1px solid black; color: Black; padding: 5px;" class="table-text-small">
    <div style="height: 75px; display: inline-block;">
        <span style="font-weight: bold;">@(ViewData["FirmName"])</span><br />
        @(ViewData["FirmAddress"])<br />
        @(ViewData["FirmCity"]), @(ViewData["FirmState"]) @(ViewData["FirmZip"])<br />
        Phone: @(ViewData["FirmPhone"])<br />
        Web: @(ViewData["FirmWeb"])
    </div>

    <div style="float: right; font-weight: normal; font-size: 32px; display: inline-block;">
        Invoice
    </div>

    <br />

    <div style="display: inline-block; margin-top: 25px; margin-left: 20px; border: 1px solid #c0c0c0; width: 450px;">
        <div style="display: block; background: #dddddd;">Bill To:</div>
        @(Html.HiddenFor(x => x.BillTo.Id))
        <table cellpadding="0" cellspacing="0" border="0" style="width: 100%; padding: 0; margin: 0; line-height: 11px;">
            <tr>
                <td style="padding: 3px;">Name:</td>
                <td style="width: 365px; padding: 3px;">@(Html.TextBoxFor(x => x.BillTo_NameLine1, new { @style = "width: 100%;" }))</td>
            </tr>
            <tr>
                <td style="padding: 3px;">Name 2:</td>
                <td style="width: 365px; padding: 3px;">@(Html.TextBoxFor(x => x.BillTo_NameLine2, new { @style = "width: 100%;" }))</td>
            </tr>
            <tr>
                <td style="padding: 3px;">Address:</td>
                <td style="width: 365px; padding: 3px;">@(Html.TextBoxFor(x => x.BillTo_AddressLine1, new { @style = "width: 100%;" }))</td>
            </tr>
            <tr>
                <td style="padding: 3px;">Address 2:</td>
                <td style="width: 365px; padding: 3px;">@(Html.TextBoxFor(x => x.BillTo_AddressLine2, new { @style = "width: 100%;" }))</td>
            </tr>
            <tr>
                <td style="padding: 3px;">City:</td>
                <td style="width: 365px; padding: 3px;">@(Html.TextBoxFor(x => x.BillTo_City, new { @style = "width: 100%;" }))</td>
            </tr>
            <tr>
                <td style="padding: 3px;">State:</td>
                <td style="width: 365px; padding: 3px;">@(Html.TextBoxFor(x => x.BillTo_State, new { @style = "width: 100%;" }))</td>
            </tr>
            <tr>
                <td style="padding: 3px;">Zip:</td>
                <td style="width: 365px; padding: 3px;">@(Html.TextBoxFor(x => x.BillTo_Zip, new { @style = "width: 100%;" }))</td>
            </tr>
        </table>
    </div>

    <div style="display: inline-block; vertical-align: top; padding-left: 15px;">
        <table cellpadding="0" cellspacing="0" style="border: none; padding: 0px; line-height: 11px;">
            <tr>
                <td style="padding: 0px; text-align: right;">Invoice No.:</td>
                <td style="padding: 0 0 0 5px;">@(Model.Id)@(Html.HiddenFor(x => x.Id))</td>
            </tr>
            <tr>
                <td style="padding: 0px; text-align: right;">External Invoice No.:</td>
                <td style="padding: 0 0 0 5px;">@(Html.TextBoxFor(x => x.ExternalInvoiceId, new { @style = "width: 300px;" }))</td>
            </tr>
            <tr>
                <td style="padding: 0px; text-align: right;">Invoice Date:</td>
                <td style="padding: 0 0 0 5px;">@(Html.TextBoxFor(x => x.Date, new { @Value = Model.Date.ToString("M/d/yyyy"), @style = "width: 300px;" }))</td>
            </tr>
            <tr>
                <td style="padding: 0px; text-align: right;">Due Date:</td>
                <td style="padding: 0 0 0 5px;">@(Html.TextBoxFor(x => x.Due, new { @Value = Model.Due.ToString("M/d/yyyy"), @style = "width: 300px;" }))</td>
            </tr>
            <tr>
                <td style="padding: 0px; text-align: right;">Next Run:</td>
                <td style="padding: 0 0 0 5px;">@(Html.TextBoxFor(x => x.BillingGroup.NextRun, new { @Value = Model.BillingGroup.NextRun.ToString("M/d/yyyy"), @style = "width: 300px;" }))</td>
            </tr>
        </table>
            
        <div style="display: inline-block; margin-top: 25px; margin-left: 20px; border: 1px solid #c0c0c0; width: 450px;">
            <div style="display: block; background: #dddddd; line-height: 11px;">Billing Options:</div>
            <table cellpadding="0" cellspacing="0" border="0" style="width: 100%; padding: 0; margin: 0;">
                <tr>
                    <td style="padding: 3px; font-size: 10px;">Rate From:</td>
                    <td style="width: 365px; padding: 3px;">
                        <select id="RateFrom" style="font-size: 10px;">
                            <option value="Employee">Employee</option>
                            <option selected="selected" value="Matter">Matter</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td style="padding: 3px; font-size: 10px;">Start Date:</td>
                    <td style="width: 365px; padding: 3px;"><input type="text" name="StartDate" id="StartDate" style="width: 100px; font-size: 10px; line-height: 11px;" /></td>
                </tr>
                <tr>
                    <td style="padding: 3px; font-size: 10px;">Stop Date:</td>
                    <td style="width: 365px; padding: 3px;"><input type="text" name="StopDate" id="StopDate" style="width: 100px; font-size: 10px; line-height: 11px;" /></td>
                </tr>
            </table>
        </div>
    </div>

    <br />
        

    @for (int j = 0; j < Model.Matters.Count; j++)
    {

    <div style="border: 1px solid gray; margin: 10px 0 10px 0;">

        <div style="text-align: center; display: inline-block; width: 100%; font-weight: bold;">
            @(Model.Matters[j].Matter.Title)<br />
            @(Model.Matters[j].Matter.CaseNumber)
            @(Html.HiddenFor(x => x.Matters[j].Matter.Id))
        </div>

        <div style="text-align: left; margin: 5px 0 0 0; padding: 2px 0px 2px 5px;
        font-size: 12px; font-weight: bold; border-collapse: collapse;
        border-top-left-radius: 5px; border-top-right-radius: 5px; -moz-border-top-left-radius: 5px;
        -moz-border-top-right-radius: 5px; background: #f5f5f5;">Expenses</div>
        
        <div style="border: none; padding: 0;">            
            <table class="table-striped table-condensed" cellpadding="0" cellspacing="0" style="border: none; width: 100%; font-size: 10px; line-height: 11px;">
                <thead style="background: #dddddd; text-align: center; font-weight: bold;">
                    <tr>
                        <td style="width: 100px;">
                            Incurred
                        </td>
                        <td>
                            Vendor
                        </td>
                        <td>
                            Details
                        </td>
                        <td style="width: 100px;">
                            Amount
                        </td>  
                    </tr>      
                </thead>
                <tbody>
        @{ bool altRow = true;
            for (int i = 0; i < Model.Matters[j].Expenses.Count; i++)
            {
                OpenLawOffice.Web.ViewModels.Billing.InvoiceExpenseViewModel item = Model.Matters[j].Expenses[i];
                altRow = !altRow;
                if (altRow)
                {
                    <tr class="tr_alternate">
                        <td>@(item.Expense.Incurred.ToShortDateString())</td>
                        <td>@(item.Expense.Vendor)</td>
                        <td>@(Html.TextBoxFor(x => x.Matters[j].Expenses[i].Details, new { @style = "width: 100%; font-size: 11px;" }))</td>
                        <td style="text-align: center;">$@(Html.TextBoxFor(x => x.Matters[j].Expenses[i].Amount, new { @style = "width: 75px; font-size: 11px;" }))@(Html.HiddenFor(x => x.Matters[j].Expenses[i].Expense.Id))</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@(item.Expense.Incurred.ToShortDateString()) </td>
                        <td>@(item.Expense.Vendor) </td>
                        <td>@(Html.TextBoxFor(x => x.Matters[j].Expenses[i].Details, new { @style = "width: 100%; font-size: 11px;" }))</td>
                        <td style = "text-align: center;" >$@(Html.TextBoxFor(x => x.Matters[j].Expenses[i].Amount, new { @style = "width: 75px; font-size: 11px;" }))@(Html.HiddenFor(x => x.Matters[j].Expenses[i].Expense.Id))</td>
                    </tr>
                }
            }
            if (Model.Matters[j].Expenses.Count <= 0)
            {
                altRow = !altRow;
                if (altRow)
                {
                    <tr class="tr_alternate">
                        <td colspan="4" style="text-align: center;">
                            No Expenses
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td colspan="4" style="text-align: center;">
                            No Expenses
                        </td>
                    </tr>
                }
            }
        }
                </tbody>
            </table>
        </div>
        
        <br />

        <div style="text-align: left; margin: 5px 0 0 0; padding: 2px 0px 2px 5px;
        font-size: 12px; font-weight: bold; border-collapse: collapse;
        border-top-left-radius: 5px; border-top-right-radius: 5px; -moz-border-top-left-radius: 5px;
        -moz-border-top-right-radius: 5px; background: #f5f5f5;">Fees</div>
        
        <div style="border: none; padding: 0;">            
            <table class="table-striped table-condensed" cellpadding="0" cellspacing="0" style="border: none; width: 100%; font-size: 10px; line-height: 11px;">
                <thead style="background: #dddddd; text-align: center; font-weight: bold;">
                    <tr>
                        <td style="width: 100px;">
                            Incurred
                        </td>
                        <td>
                            Details
                        </td>
                        <td style="width: 100px;">
                            Amount
                        </td>  
                    </tr>      
                </thead>
                <tbody>
            @{ altRow = true;
                for (int i = 0; i < Model.Matters[j].Fees.Count; i++)
                {
                    OpenLawOffice.Web.ViewModels.Billing.InvoiceFeeViewModel item = Model.Matters[j].Fees[i];
                    altRow = !altRow;
                    if (altRow)
                    {
                        <tr class="tr_alternate">
                            <td>@(item.Fee.Incurred.ToShortDateString())</td>
                            <td>@(Html.TextBoxFor(x => x.Matters[j].Fees[i].Details, new { @style = "width: 100%; font-size: 11px;" }))</td>
                            <td style="text-align: center;">$@(Html.TextBoxFor(x => x.Matters[j].Fees[i].Amount, new { @style = "width: 75px; font-size: 11px;" }))@(Html.HiddenFor(x => x.Matters[j].Fees[i].Fee.Id))</td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td>@(item.Fee.Incurred.ToShortDateString())</td>
                            <td>@(Html.TextBoxFor(x => x.Matters[j].Fees[i].Details, new { @style = "width: 100%; font-size: 11px;" }))</td>
                            <td style="text-align: center;">$@(Html.TextBoxFor(x => x.Matters[j].Fees[i].Amount, new { @style = "width: 75px; font-size: 11px;" }))@(Html.HiddenFor(x => x.Matters[j].Fees[i].Fee.Id))</td>
                        </tr>
                    }
                }
                if (Model.Matters[j].Fees.Count <= 0)
                {
                    altRow = !altRow;
                    if (altRow)
                    {
                        <tr class="tr_alternate">
                            <td colspan="3" style="text-align: center;">
                                No Fees
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" style="text-align: center;">
                                No Fees
                            </td>
                        </tr>
                    }
                }
            }
                </tbody>
            </table>
        </div>

        <br />

@{  // TIME GROUPS BEGIN HERE

    for (int i = 0; i < Model.Matters[j].TimeGroups.Count; i++)
    {
        if (Model.Matters[j].TimeGroups[i] != null)
        {
            <div style="text-align: left; margin: 5px 0 0 0; padding: 2px 0px 2px 5px;
            font-size: 12px; font-weight: bold; border-collapse: collapse;
            border-top-left-radius: 5px; border-top-right-radius: 5px; -moz-border-top-left-radius: 5px;
            -moz-border-top-right-radius: 5px; background: #f5f5f5;">Time: @Model.Matters[j].TimeGroups[i].GroupName</div>

            <div style="border: none; padding: 0;">            
                <table class="table-striped table-condensed" cellpadding="0" cellspacing="0" style="border: none; width: 100%; font-size: 10px; line-height: 11px;">
                    <thead style="background: #dddddd; text-align: center; font-weight: bold;">
                        <tr>
                            <td style="width: 100px;">
                                Date
                            </td>
                            <td>
                                Details
                            </td>
                            <td style="width: 120px;">
                                Duration (h:m)
                            </td>
                            <td style="width: 100px;">
                                Rate ($/hr.)
                            </td>  
                        </tr>      
                    </thead>
                    <tbody>
                    @{ altRow = true;}
                    @for (int k = 0; k < Model.Matters[j].TimeGroups[i].Times.Count; k++)
                    {
                        OpenLawOffice.Web.ViewModels.Billing.InvoiceTimeViewModel item = Model.Matters[j].TimeGroups[i].Times[k];
                        altRow = !altRow;
                        if (altRow)
                        {
                            <tr class="tr_alternate">
                                <td>@(item.Time.Start.ToShortDateString())</td>
                                <td>@(Html.TextBoxFor(x => x.Matters[j].TimeGroups[i].Times[k].Details, new { @style = "width: 100%; font-size: 11px;" }))</td>
                                <td style="text-align: center;">
                                    @(TimeSpanHelper.TimeSpan(item.Time.Duration, false))@(Html.HiddenFor(x => x.Matters[j].TimeGroups[i].Times[k].Duration))
                                    @(Html.HiddenFor(x => x.Matters[j].TimeGroups[i].Times[k].Time.Id))
                                </td>
                                <td style="text-align: center;">$@(Html.TextBoxFor(x => x.Matters[j].TimeGroups[i].Times[k].PricePerHour, new { @style = "width: 75px; font-size: 11px;" }))</td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>@(item.Time.Start.ToShortDateString())</td>
                                <td>@(Html.TextBoxFor(x => x.Matters[j].TimeGroups[i].Times[k].Details, new { @style = "width: 100%; font-size: 11px;" }))</td>
                                <td style="text-align: center;">@(TimeSpanHelper.TimeSpan(item.Time.Duration, false))@(Html.HiddenFor(x => x.Matters[j].TimeGroups[i].Times[k].Duration))
                                    @(Html.HiddenFor(x => x.Matters[j].TimeGroups[i].Times[k].Time.Id))</td>
                                <td style="text-align: center;">$@(Html.TextBoxFor(x => x.Matters[j].TimeGroups[i].Times[k].PricePerHour, new { @style = "width: 75px; font-size: 11px;" }))</td>
                            </tr>
                        }
                    }
                    @if (Model.Matters[j].TimeGroups[i].Times.Count <= 0)
                    {
                        altRow = !altRow;
                        if (altRow)
                        {
                            <tr class="tr_alternate">
                                <td colspan="4" style="text-align: center;">
                                    No Time
                                    @(Html.HiddenFor(x => x.Matters[j].TimeGroups[i]))
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" style="text-align: center;">
                                    No Time
                                    @(Html.HiddenFor(x => x.Matters[j].TimeGroups[i]))
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>
            }
        }
    }
    </div>
}


    <div style="display: block; text-align: right; padding-top: 20px; padding-right: 20px; font-size: 10px; line-height: 11px;">
        Contract Amount: $@(Html.TextBoxFor(x => Model.BillingGroup.Amount, new { @style = "width: 75px; font-size: 11px;" }))
    </div>

    <div style="display: block; text-align: right; padding-top: 20px; padding-right: 20px; font-size: 10px; line-height: 11px;">
        Tax Amount: $@(Html.TextBoxFor(x => x.TaxAmount, new { @style = "width: 75px; font-size: 11px;" }))
    </div>
        
    <div style="display: block; text-align: right; padding-top: 20px; padding-right: 20px;">
        <input type="submit" value="Save" class="btn btn-default" style="width: 100px;" />
    </div>
        
    </div>
}
