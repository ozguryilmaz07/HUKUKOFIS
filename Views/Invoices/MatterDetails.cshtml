@model OpenLawOffice.Web.ViewModels.Billing.InvoiceViewModel
@using OpenLawOffice.Web.Helpers
@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Invoice Details";
    ViewBag.PageTitle = "Invoice Details";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Matters">Matters</a></li>
        <li>Matter: <a href="/Matters/Details/@(Model.Matter.Id)">@(Model.Matter.Title)</a></li>
        <li><a href="/Matters/Invoices/@(Model.Matter.Id)">Invoices</a></li>
        <li>Invoice: <a href="/Invoices/MatterDetails/@(Model.Id)">@(Model.Id)</a></li>
    </ul>
}

<script type="text/javascript">
    $(function () {
        $("#edit").click(function () {
            window.location = '/Invoices/MatterEdit/@(Model.Id)';
        })
        $("#details").click(function () {
            window.location = '/Invoices/MatterDetails/@(Model.Id)';
        })
        $("#delete").click(function () {
            window.location = '/Invoices/MatterDelete/@(Model.Id)';
        })
        $("#print").click(function () {
            window.open('/Invoices/MatterPrint/@(Model.Id)', 'PrintWindow', 'width=1024,height=768,scrollbars=yes');
        })
    })
</script>

<div class="container-fluid">
    <div class="row text-right">
        <div class="btn-group">
            <button id="details" class="btn btn-sm btn-primary"><span class="fa fa-info"></span> Detail</button>
            <button id="edit" class="btn btn-sm btn-primary"><span class="fa fa-pencil"></span> Edit</button>
            <button id="delete" class="btn btn-sm btn-primary"><span class="fa fa-times"></span> Delete</button>
            <button id="print" class="btn btn-sm btn-primary"><span class="fa fa-print"></span> Print</button>
        </div>
    </div>
</div>

<div style="min-width: 1200px; border: 1px solid black; color: Black; padding: 5px;">
    <div style="height: 75px; display: inline-block;">
        <span style="font-weight: bold;">@(ViewData["FirmName"])</span><br />
        @(ViewData["FirmAddress"])<br />
        @(ViewData["FirmCity"]), @(ViewData["FirmState"]) @(ViewData["FirmZip"])<br />
        Phone: @(ViewData["FirmPhone"])<br />
        Web: @(ViewData["FirmWeb"])
    </div>

    <div style="float: right; font-weight: normal; font-size: 32px; display: inline-block;">
        Invoice
    </div>
        
    <br />

    <div style="display: inline-block; margin-top: 25px; margin-left: 20px; border: 1px solid #c0c0c0; width: 450px;">
        <div style="display: block; background: #dddddd;">Bill To:</div>
        <div>@(Model.BillTo_NameLine1)</div>
        @if (!string.IsNullOrEmpty(Model.BillTo_NameLine2))
        {
        <div>@(Model.BillTo_NameLine2)</div>            
        }
        <div>@(Model.BillTo_AddressLine1)</div>
        @if (!string.IsNullOrEmpty(Model.BillTo_AddressLine2))
        {
        <div>@(Model.BillTo_AddressLine2)</div>            
        }
        <div>@(Model.BillTo_City), @(Model.BillTo_State) @(Model.BillTo_Zip)</div>
    </div>

    <div style="display: inline-block; vertical-align: top; padding-left: 15px;">
        <table cellpadding="0" cellspacing="0" style="border: none; padding: 0px;">
            <tr>
                <td style="padding: 0px; text-align: right;">Invoice No.:</td>
                <td style="padding: 0 0 0 5px;">@(Model.Id)</td>
            </tr>
            <tr>
                <td style="padding: 0px; text-align: right;">External Invoice No.:</td>
                <td style="padding: 0 0 0 5px;">@(Model.ExternalInvoiceId)</td>
            </tr>
            <tr>
                <td style="padding: 0px; text-align: right;">Invoice Date:</td>
                <td style="padding: 0 0 0 5px;">@(Model.Date.ToString("M/d/yyyy"))</td>
            </tr>
            <tr>
                <td style="padding: 0px; text-align: right;">Due Date:</td>
                <td style="padding: 0 0 0 5px;">@(Model.Due.ToString("M/d/yyyy"))</td>
            </tr>
            @if (Model.Matter != null && !string.IsNullOrEmpty(Model.Matter.Title))
            {
            <tr>
                <td style="padding: 0px; text-align: right;">Matter:</td>
                <td style="padding: 0 0 0 5px;">@(Model.Matter.Title)</td>
            </tr>
            } 
                @if (Model.Matter != null && !string.IsNullOrEmpty(Model.Matter.Title))
                {
            <tr>
                <td style="padding: 0px; text-align: right;">Case No.:</td>
                <td style="padding: 0 0 0 5px;">@(Model.Matter.CaseNumber)</td>
            </tr>
                }
        </table>
    </div>

    <br />

    <div style="text-align: left; margin: 5px 0 0 0; padding: 2px 0px 2px 5px;
        font-size: 12px; font-weight: bold; border-collapse: collapse;
        border-top-left-radius: 5px; border-top-right-radius: 5px; -moz-border-top-left-radius: 5px;
        -moz-border-top-right-radius: 5px; background: #f5f5f5;">Expenses</div>
        
    <div style="border: none; padding: 0;">            
        <table cellpadding="0" cellspacing="0" style="border: none; width: 100%; font-size: 10px;">
            <thead style="background: #dddddd; text-align: center; font-weight: bold;">
                <tr>
                    <td style="width: 100px;">
                        Incurred
                    </td>
                    <td>
                        Vendor
                    </td>
                    <td>
                        Details
                    </td>
                    <td style="width: 100px;">
                        Amount
                    </td>  
                </tr>      
            </thead>
            <tbody>
            @{ bool altRow = true;
                decimal expSum = 0;
                for (int i = 0; i < Model.Expenses.Count; i++)
                {
                    OpenLawOffice.Web.ViewModels.Billing.InvoiceExpenseViewModel item = Model.Expenses[i];
                    altRow = !altRow;
                    expSum += item.Amount;
                    if (altRow)
                    {
                        <tr style="background-color: #f5f5f5;">
                            <td>@(item.Expense.Incurred.ToShortDateString())</td>
                            <td>@(item.Expense.Vendor)</td>
                            <td>@(item.Details)</td>
                            <td style="text-align: center;">@(item.Amount.ToString("C"))</td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td>@(item.Expense.Incurred.ToShortDateString())</td>
                            <td>@(item.Expense.Vendor)</td>
                            <td>@(item.Details)</td>
                            <td style="text-align: center;">@(item.Amount.ToString("C"))</td>
                        </tr>
                    }
                }
                altRow = !altRow;
                if (altRow)
                {
                    <tr style="background-color: #f5f5f5;">
                        <td colspan="3" style="text-align: right; font-weight: bold;">
                            Total:
                        </td>
                        <td style="text-align: center; font-weight: bold;">
                            @(expSum.ToString("C"))
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td colspan="3" style="text-align: right; font-weight: bold;">
                            Total:
                        </td>
                        <td style="text-align: center; font-weight: bold;">
                            @(expSum.ToString("C"))
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
        
    <br />

    <div style="text-align: left; margin: 5px 0 0 0; padding: 2px 0px 2px 5px;
        font-size: 12px; font-weight: bold; border-collapse: collapse;
        border-top-left-radius: 5px; border-top-right-radius: 5px; -moz-border-top-left-radius: 5px;
        -moz-border-top-right-radius: 5px; background: #f5f5f5;">Fees</div>
        
    <div style="border: none; padding: 0;">            
        <table cellpadding="0" cellspacing="0" style="border: none; width: 100%; font-size: 10px;">
            <thead style="background: #dddddd; text-align: center; font-weight: bold;">
                <tr>
                    <td style="width: 100px;">
                        Incurred
                    </td>
                    <td>
                        Details
                    </td>
                    <td style="width: 100px;">
                        Amount
                    </td>  
                </tr>      
            </thead>
            <tbody>
            @{ altRow = true;
                decimal feeSum = 0;
                for (int i = 0; i < Model.Fees.Count; i++)
                {
                    OpenLawOffice.Web.ViewModels.Billing.InvoiceFeeViewModel item = Model.Fees[i];
                    altRow = !altRow;
                    feeSum += item.Amount;
                    if (altRow)
                    {
                        <tr style="background-color: #f5f5f5;">
                            <td>@(item.Fee.Incurred.ToShortDateString())</td>
                            <td>@(item.Details)</td>
                            <td style="text-align: center;">@(item.Amount.ToString("C"))</td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td>@(item.Fee.Incurred.ToShortDateString())</td>
                            <td>@(item.Details)</td>
                            <td style="text-align: center;">@(item.Amount.ToString("C"))</td>
                        </tr>
                    }
                }
                altRow = !altRow;
                if (altRow)
                {
                    <tr style="background-color: #f5f5f5;">
                        <td colspan="2" style="text-align: right; font-weight: bold;">
                            Total:
                        </td>
                        <td style="text-align: center; font-weight: bold;">
                            @(feeSum.ToString("C"))
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td colspan="2" style="text-align: right; font-weight: bold;">
                            Total:
                        </td>
                        <td style="text-align: center; font-weight: bold;">
                            @(feeSum.ToString("C"))
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>

    <br />

    @{  // TIME GROUPS BEGIN HERE

        decimal timeSum = 0;
        decimal timeGroupSum = 0;
        TimeSpan timeGroupSpanSum = new TimeSpan();
        for (int i = 0; i < Model.TimeGroups.Count; i++)
        {
            <div style="text-align: left; margin: 5px 0 0 0; padding: 2px 0px 2px 5px;
                font-size: 12px; font-weight: bold; border-collapse: collapse;
                border-top-left-radius: 5px; border-top-right-radius: 5px; -moz-border-top-left-radius: 5px;
                -moz-border-top-right-radius: 5px; background: #f5f5f5;">
                Time: @Model.TimeGroups[i].GroupName
            </div>
                <div style="border: none; padding: 0; margin: 0;">
                    <table class="table-striped table-condensed" cellpadding="0" cellspacing="0" style="border: none; width: 100%; font-size: 10px; margin: 0; line-height: 11px;">
                        <thead style="background: #dddddd; text-align: center; font-weight: bold;">
                            <tr>
                                <td style="width: 100px;">
                                    Date
                                </td>
                                <td>
                                    Details
                                </td>
                                <td style="width: 120px;">
                                    Duration (h:m)
                                </td>
                                <td style="width: 100px;">
                                    Rate ($/hr.)
                                </td>
                                <td style="width: 100px;">
                                    Amount
                                </td>  
                            </tr>
                        </thead>
                        <tbody>
                            @{ altRow = true;
                                timeGroupSum = 0;
                                timeGroupSpanSum = new TimeSpan(); }
                            @for (int j = 0; j < Model.TimeGroups[i].Times.Count; j++)
                            {
                                OpenLawOffice.Web.ViewModels.Billing.InvoiceTimeViewModel item = Model.TimeGroups[i].Times[j];
                                altRow = !altRow;
                                timeGroupSpanSum += item.Duration;
                                timeGroupSum += (decimal)item.Duration.TotalHours * item.PricePerHour;
                                timeSum += (decimal)item.Duration.TotalHours * item.PricePerHour;
                                if (altRow)
                                {
                                    <tr style="background-color: #f5f5f5;">
                                        <td>@(item.Time.Start.ToShortDateString())</td>
                                        <td>@(item.Details)</td>
                                        <td style="text-align: center;">@(TimeSpanHelper.TimeSpan(item.Duration, false))</td>
                                        <td style="text-align: center;">@(item.PricePerHour.ToString("C"))</td>
                                        <td style="text-align: center;">@(string.Format("{0:C}", (decimal)item.Duration.TotalHours * item.PricePerHour))</td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td>@(item.Time.Start.ToShortDateString())</td>
                                        <td>@(item.Details)</td>
                                        <td style="text-align: center;">@(TimeSpanHelper.TimeSpan(item.Duration, false))</td>
                                        <td style="text-align: center;">@(item.PricePerHour.ToString("C"))</td>
                                        <td style="text-align: center;">@(string.Format("{0:C}", (decimal)item.Duration.TotalHours * item.PricePerHour))</td>
                                    </tr>
                                }
                            }
                            @if (Model.TimeGroups[i].Times.Count <= 0)
                            {
                                altRow = !altRow;
                                if (altRow)
                                {
                                    <tr class="tr_alternate">
                                        <td colspan="5" style="text-align: center;">
                                            No Time
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" style="text-align: center;">
                                            No Time
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                altRow = !altRow;
                                if (altRow)
                                {
                                    <tr class="tr_alternate">
                                        <td colspan="2" style="text-align: right; font-weight: bold;">
                                            Group Total:
                                        </td>
                                        <td style="text-align: center; font-weight: bold;">
                                            <span id="timeTotal">@(timeGroupSpanSum.ToString())</span>
                                        </td>
                                        <td></td>
                                        <td style="text-align: center; font-weight: bold;">
                                            <span id="timeTotal">@(timeGroupSum.ToString("C"))</span>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="2" style="text-align: right; font-weight: bold;">
                                            Group Total:
                                        </td>
                                        <td style="text-align: center; font-weight: bold;">
                                            <span id="timeTotal">@(timeGroupSpanSum.ToString())</span>
                                        </td>
                                        <td></td>
                                        <td style="text-align: center; font-weight: bold;">
                                            <span id="timeTotal">@(timeGroupSum.ToString("C"))</span>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                                }
    }
    <br />

    @{
        decimal subtotal = expSum + feeSum + timeSum;
        decimal total = subtotal;
    }

    <div style="display: block; text-align: right; padding-top: 5px; padding-right: 20px; height: 100px; font-size: 10px;">
        <table border="0" cellpadding="0" cellspacing="0" style="float: right; border: none; line-height: 11px;">
            <tr>
                <td>Subtotal:</td>
                <td id="subtotal">@(subtotal.ToString("C"))</td>
            </tr>
            <tr>
                <td>Tax Amount:</td>
                <td>$@(Model.TaxAmount)</td>
            </tr>
            <tr style="font-weight: bold;">
                <td>Total Due:</td>
                <td id="total">@(total.ToString("C"))</td>
            </tr>
        </table>
    </div>
</div> 
