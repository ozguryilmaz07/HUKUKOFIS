@model OpenLawOffice.Web.ViewModels.Timing.TimeViewModel

@{ 
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Time Entry Details";
    ViewBag.PageTitle = "Time Entry Details";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Matters">Matters</a></li>
        <li>Matter: <a href="/Matters/Details/@(ViewBag.Matter.Id)">@(ViewBag.Matter.Title)</a></li>
        <li><a href="/Matters/Tasks/@(ViewBag.Matter.Id)">Tasks</a></li>
        <li>Task: <a href="/Tasks/Details/@(ViewBag.Task.Id)">@(ViewBag.Task.Title)</a></li>
        <li><a href="/Tasks/Time/@(ViewBag.Task.Id)">Time Entries</a></li>
    </ul>
}
    
<div class="container-fluid">
    <div class="row text-right">
        <div class="btn-group">
            <button type="button" id="details" class="btn btn-sm btn-primary" onclick="navTo('/Timing/Details/@(Model.Id)')"><span class="fa fa-info"></span> Detail</button>
            <button type="button" id="edit" class="btn btn-sm btn-primary" onclick="navTo('/Timing/Edit/@(Model.Id)')"><span class="fa fa-pencil"></span> Edit</button>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        Task Details
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-sm-2">Id:</div>
            <div class="col-sm-3">
                @(Model.Id)
            </div>
            <div class="col-sm-2"></div>
            <div class="col-sm-2">Duration:</div>
            <div class="col-sm-3">
                @if (Model.Stop.HasValue)
                {
                    <text>@(Math.Round(((TimeSpan)(Model.Stop - Model.Start)).TotalMinutes, 0)) min.</text>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">Time Category:</div>
            <div class="col-sm-3">
                @(Model.TimeCategory.Title)
            </div>
            <div class="col-sm-2"></div>
            <div class="col-sm-2"></div>
            <div class="col-sm-3">
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">Start:</div>
            <div class="col-sm-3">
                @(String.Format("{0:g}", Model.Start))
            </div>
            <div class="col-sm-2"></div>
            <div class="col-sm-2">Stop:</div>
            <div class="col-sm-3">
                @if (Model.Stop.HasValue)
                {
                    @(String.Format("{0:g}", Model.Stop.Value))
                }
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">Billable:</div>
            <div class="col-sm-3">
                @(Html.CheckBoxFor(model => model.Billable, new { disabled = true }))
            </div>
            <div class="col-sm-2"></div>
            <div class="col-sm-2">Worker:</div>
            <div class="col-sm-3">
                @(Html.ActionLink(Model.Worker.DisplayName, "Details", "Contacts", new { id = Model.Worker.Id }, null))
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">Details:</div>
            <div class="col-sm-10">
                @(Model.Details)
            </div>
        </div>
    </div>
</div>

@{ Html.RenderPartial("_CoreDetails");}