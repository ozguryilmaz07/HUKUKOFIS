@model OpenLawOffice.Web.ViewModels.Timing.TimeViewModel

@{ 
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Edit Time Entry";
    ViewBag.PageTitle = "Edit Time Entry";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Matters">Matters</a></li>
        <li>Matter: <a href="/Matters/Details/@(ViewBag.Matter.Id)">@(ViewBag.Matter.Title)</a></li>
        <li><a href="/Matters/Tasks/@(ViewBag.Matter.Id)">Tasks</a></li>
        <li>Task: <a href="/Tasks/Details/@(ViewBag.Task.Id)">@(ViewBag.Task.Title)</a></li>
        <li><a href="/Tasks/Time/@(ViewBag.Task.Id)">Time Entries</a></li>
    </ul>
}
    
<div class="container-fluid">
    <div class="row text-right">
        <div class="btn-group">
            <button type="button" id="details" class="btn btn-sm btn-primary" onclick="navTo('/Timing/Details/@(Model.Id)')"><span class="fa fa-info"></span> Detail</button>
            <button type="button" id="edit" class="btn btn-sm btn-primary" onclick="navTo('/Timing/Edit/@(Model.Id)')"><span class="fa fa-pencil"></span> Edit</button>
        </div>
    </div>
</div>

@using (Html.BeginForm())
    {
@(Html.ValidationSummary(true))

    if (ViewBag.ErrorMessage != null)
    {
        <div style="color: Red;">@Html.Raw(ViewBag.ErrorMessage)</div>
    }

    <div class="panel panel-default">
        <div class="panel-heading">
            Task Assignment Details
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="form-group">
                    <span class="control-label col-sm-2">
                        Time Category
                    </span>
                    <div class="col-sm-5">
                        @(Html.DropDownListFor(x => x.TimeCategory.Id,
                        new SelectList(ViewBag.TimeCategoryList, "Id", "Title"),
                        new { @size = 1, @class = "form-control", @style = "width: 100%" }))
                    </div>
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-2">
                    Start<span class="required-field" title="Required Field">*</span>
                </span>
                <div class="col-sm-10">
                    @(Html.TextBoxFor(m => m.Start, new { @Value = Model.Start.ToString("M/d/yyyy h:mm tt"), @class = "form-control" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-2">
                    Stop<span class="required-field" title="Required Field">*</span>
                </span>
                <div class="col-sm-10">
@if (Model.Stop.HasValue)
{
                    @(Html.TextBoxFor(m => m.Stop, new { @Value = Model.Stop.Value.ToString("M/d/yyyy h:mm tt"), @class = "form-control" }))
}
else
{
                    @(Html.TextBoxFor(m => m.Stop, new { @class = "form-control" }))
}
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-2">
                    Billable<span class="required-field" title="Required Field">*</span>
                </span>
                <div class="col-sm-10">
                    @(Html.CheckBoxFor(model => model.Billable, new { @Checked = true, @class = "form-control", @style = "width: 50px; display: inline;" }))
                    Check if time is billable.
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-2">
                    Worker<span class="required-field" title="Required Field">*</span>
                </span>
                <div class="col-sm-10">
                    @(Html.DropDownListFor(model => model.Worker.Id,
                    new SelectList(ViewBag.EmployeeContactList, "Id", "DisplayName"),
                    new { @size = 5, @class = "form-control" }))        
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-2">
                    Details
                </span>
                <div class="col-sm-10">
                    @(Html.TextAreaFor(m => m.Details, new { @class = "form-control", @style = "height: 100px;" }))
                </div>
            </div>
        </div>
    </div>
    <p>
        <button type="submit" class="btn btn-lg btn-default">Submit</button>
    </p>
}