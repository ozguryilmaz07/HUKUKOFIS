@model OpenLawOffice.Web.ViewModels.Opportunities.DashboardViewModel

@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Opportunity Dashboard";
    ViewBag.PageTitle = "Opportunity Dashboard";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Opportunities" class="active">Opportunities</a></li>
    </ul>
}

<script language="javascript">
    var vars = [], hash;
    var q = document.URL.split('?')[1];
    if (q != undefined) {
        q = q.split('&');
        for (var i = 0; i < q.length; i++) {
            hash = q[i].split('=');
            vars.push(hash[1]);
            vars[hash[0]] = hash[1];
        }
    }
    $(document).ready(function () {
        if (vars['accountFilter'] != null)
            $('#accountFilter').val(decodeURIComponent(vars['accountFilter']));
        if (vars['probabilityFilter'] != null)
            $('#probabilityFilter').val(decodeURIComponent(vars['probabilityFilter']));
        if (vars['stageFilter'] != null)
            $('#SelectedStage_Id').val(decodeURIComponent(vars['stageFilter']));

        $('#goButton').click(function () {
            go();
        });
        $('#accountFilter').focus(function () {
            $('#accountFilter').val('');
        });
        $('#probabilityFilter').focus(function () {
            $('#probabilityFilter').val('');
        });
        $('#accountFilter').keyup(function (e) {
            if (e.keyCode == 13) go();
        });
        $('#probabilityFilter').keyup(function (e) {
            if (e.keyCode == 13) go();
        });
        $('#SelectedStage_Id').change(function () {
            go();
        });
        $('#closedFilter').change(function () {
            go();
        });
        $('#accountFilter').autocomplete({
            source: "/Contacts/ListDisplayNameOnly",
            minLength: 2,
            focus: function (event, ui) {
                $("#accountFilter").val(ui.item.DisplayName);
                return false;
            },
            select: function (event, ui) {
                $("#accountFilter").val(ui.item.DisplayName);
                go();
                return false;
            }
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            return $("<li>")
                .append("<a>" + item.DisplayName + "</a>")
                .appendTo(ul);
        };
    });
    function go() {
        var href;
        var accountFilter = $('#accountFilter').val().trim();
        var probabilityFilter = $('#probabilityFilter').val().trim();
        var stageFilter = $('#SelectedStage_Id').val();
        var closedFilter = $('#closedFilter').val();
        var base;
        var qMarkAt = window.location.href.lastIndexOf('?');
        //$('#contactFilterGo').attr('disabled', 'disabled');
        if (qMarkAt > 0)
            base = window.location.href.substr(0, qMarkAt);
        else
            base = window.location.href;

        href = base + '?a=';

        if (accountFilter.length > 0)
            href += '&accountFilter=' + accountFilter;
        if (probabilityFilter.length > 0)
            href += '&probabilityFilter=' + probabilityFilter;
        if (stageFilter.length > 0)
            href += '&stageFilter=' + stageFilter;
        if (closedFilter.length > 0) {
            if (closedFilter == 'Open')
                href += '&closedFilter=False';
            else if (closedFilter == 'Closed')
                href += '&closedFilter=True';
            else if (closedFilter == 'Both')
                href += '&closedFilter=Both';
        }

        window.location.href = href;
    };
</script>


<div class="row">
    <div class="col-sm-8">
        <div class="form-inline row text-center">
            <div class="form-group col-sm-12">
                <div class="input-group input-group-sm">
                    <div class="input-group-addon">Account</div>
                    <input type="text" class="form-control" id="accountFilter" placeholder="Contact Name" />
                </div>
                <div class="input-group input-group-sm">
                    <div class="input-group-addon">Probability (Above)</div>
                    <input type="number" step="1" min="0" max="100" class="form-control" id="probabilityFilter" />
                </div>
                <div class="input-group input-group-sm">
                    <div class="input-group-addon">Stage</div>
                    @(Html.DropDownListFor(x => x.SelectedStage.Id,
                new SelectList(Model.StageTypes, "Id", "Title"), "< Select >",
                new { @class = "form-control" }))
                </div>
                <div class="input-group input-group-sm">
                    <div class="input-group-addon">Closed</div>
                    <select class="form-control" id="closedFilter" name="closedFilter">
                        <option value="Open">Open</option>
                        <option value="Closed" @if (Request["closedFilter"] == "True") { <text> selected</text> }>Closed</option>
                        <option value="Both" @if (Request["closedFilter"] == "Both") { <text> selected</text> }>Both</option>
                    </select>
                </div>
                <button type="button" id="goButton" class="btn btn-sm btn-default"><span class="fa fa-search"></span> Lookup</button>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <table class="table table-striped table-condensed table-hover table-text-small notifications">
                    <thead>
                        <tr>
                            <th class="text-center">
                                Account
                            </th>
                            <th style="text-align: center;">
                                Stage
                            </th>
                            <th style="text-align: center;">
                                Probability
                            </th>
                            <th style="text-align: center;">
                                Amount
                            </th>
                        </tr>
                    </thead>
                    @foreach (OpenLawOffice.Web.ViewModels.Opportunities.OpportunityViewModel item in Model.Opportunities)
                    {
                        <tr>
                            <td>
                                @(Html.ActionLink(item.Account.DisplayName, "Details", "Opportunities", new { id = item.Id.Value }, null))
                            </td>
                            <td>
                                @item.Stage.Title
                            </td>
                            <td>
                                @item.Probability
                            </td>
                            <td>
                                @string.Format("{0:C2}", item.Amount)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="row">
            <div class="col-sm-12">
                <h3 class="text-center">Opportunities by Source (30 days)</h3>
                <canvas id="chart1" width="100" height="100"></canvas>
                <script type="text/javascript">
            var ctx = document.getElementById("chart1").getContext('2d');
            ctx.canvas.width = 500;
            ctx.canvas.height = 500;
            var chart1 = new Chart(ctx, @Html.Raw(ViewBag.OpportunitySourceGraphData));
                </script>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <h3 class="text-center">Opportunities to Matters (12 months)</h3>
                <canvas id="chart2" width="100" height="100"></canvas>
                <script type="text/javascript">
            var ctx2 = document.getElementById("chart2").getContext('2d');
            ctx2.canvas.width = 500;
            ctx2.canvas.height = 500;
            var chart2 = new Chart(ctx2, @Html.Raw(ViewBag.OpportunityConversionGraphData));
                </script>
            </div>
        </div>
    </div>
</div>