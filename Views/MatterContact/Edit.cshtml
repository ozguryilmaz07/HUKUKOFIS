@model OpenLawOffice.Web.ViewModels.Matters.MatterContactViewModel

@{ 
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Edit Contact Assignment to Matter";
    ViewBag.PageTitle = "Edit Contact Assignment to Matter";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Matters">Matters</a></li>
        <li>Matter: <a href="/Matters/Details/@(Model.Matter.Id)">@(Model.Matter.Title)</a></li>
        <li>Contact: <a href="/Contacts/Details/@(Model.Contact.Id)">@(Model.Contact.DisplayName)</a></li>
        <li><a href="/MatterContact/Details/@(Model.Matter.Id)" class="active">Contacts of Matter</a></li>
        <li><a href="/MatterContact/Delete/@(Model.Matter.Id)" class="active">Delete</a></li>
    </ul>
}

<script type="text/javascript">
    $(function () {
        $("#new").click(function () {
            window.location = '/MatterContact/AssignContact/@(Model.Matter.Id)';
        })
        $("#list").click(function () {
            window.location = '/Matters/Contacts/@(Model.Matter.Id)';
        })
        $("#details").click(function () {
            window.location = '/MatterContact/Details/@(Model.Id)';
        })
        $("#edit").click(function () {
            window.location = '/MatterContact/Edit/@(Model.Id)';
        })
        $("#delete").click(function () {
            window.location = '/MatterContact/Delete/@(Model.Id)';
        })
    })
</script>

<div class="container-fluid">
    <div class="row text-right">
        <div class="btn-group">
            <button id="new" class="btn btn-sm btn-primary"><span class="fa fa-plus"></span> New Associations</button>
            <button id="list" class="btn btn-sm btn-primary"><span class="fa fa-list"></span> List</button>
            <button id="details" class="btn btn-sm btn-primary"><span class="fa fa-info"></span> Detail</button>
            <button id="edit" class="btn btn-sm btn-primary"><span class="fa fa-pencil"></span> Edit</button>
            <button id="delete" class="btn btn-sm btn-primary"><span class="fa fa-times"></span> Delete</button>
        </div>
    </div>
</div>
     
<script language="javascript">
    $(document).ready(function () {
        $('#AttorneyFor_DisplayName').change(function () {
            if ($('#AttorneyFor_DisplayName').val() == '')
                $("#AttorneyFor_Id").val(null);
        });
        $('#AttorneyFor_DisplayName').autocomplete({
            source: "/Contacts/ListDisplayNameOnly",
            minLength: 2,
            focus: function (event, ui) {
                $("#AttorneyFor_Id").val(ui.item.Id);
                $("#AttorneyFor_DisplayName").val(ui.item.DisplayName);
                return false;
            },
            select: function (event, ui) {
                $("#AttorneyFor_Id").val(ui.item.Id);
                $("#AttorneyFor_DisplayName").val(ui.item.DisplayName);
                return false;
            }
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            return $("<li>")
            .append("<a>" + item.DisplayName + "</a>")
            .appendTo(ul);
        };
        $('#SupportStaffFor_DisplayName').change(function () {
            if ($('#SupportStaffFor_DisplayName').val() == '')
                $("#SupportStaffFor_Id").val(null);
        });
        $('#SupportStaffFor_DisplayName').autocomplete({
            source: "/Contacts/ListDisplayNameOnly",
            minLength: 2,
            focus: function (event, ui) {
                $("#SupportStaffFor_Id").val(ui.item.Id);
                $("#SupportStaffFor_DisplayName").val(ui.item.DisplayName);
                return false;
            },
            select: function (event, ui) {
                $("#SupportStaffFor_Id").val(ui.item.Id);
                $("#SupportStaffFor_DisplayName").val(ui.item.DisplayName);
                return false;
            }
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            return $("<li>")
            .append("<a>" + item.DisplayName + "</a>")
            .appendTo(ul);
        };
        $('#ThirdPartyPayorFor_DisplayName').change(function () {
            if ($('#ThirdPartyPayorFor_DisplayName').val() == '')
                $("#ThirdPartyPayorFor_Id").val(null);
        });
        $('#ThirdPartyPayorFor_DisplayName').autocomplete({
            source: "/Contacts/ListDisplayNameOnly",
            minLength: 2,
            focus: function (event, ui) {
                $("#ThirdPartyPayorFor_Id").val(ui.item.Id);
                $("#ThirdPartyPayorFor_DisplayName").val(ui.item.DisplayName);
                return false;
            },
            select: function (event, ui) {
                $("#ThirdPartyPayorFor_Id").val(ui.item.Id);
                $("#ThirdPartyPayorFor_DisplayName").val(ui.item.DisplayName);
                return false;
            }
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            return $("<li>")
            .append("<a>" + item.DisplayName + "</a>")
            .appendTo(ul);
        };
    });
</script>
       
@using (Html.BeginForm())
    {
@(Html.ValidationSummary(true))
    
    <div class="panel panel-default">
        <div class="panel-heading">Contact Assignment Information</div>
        <div class="panel-body">
            <div class="form-group">
                <span class="control-label col-sm-3">Matter</span>
                <div class="col-sm-9">
                    @(Html.HiddenFor(model => model.Matter.Id))
                    @(Html.ActionLink(Model.Matter.Title, "Details", "Matters", new { id = Model.Matter.Id }, null))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">Contact</span>
                <div class="col-sm-9">
                    @(Html.HiddenFor(model => model.Contact.Id))
                    @(Html.ActionLink(Model.Contact.DisplayName, "Details", "Contacts", new { id = Model.Contact.Id }, null))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is <span style="text-decoration: underline;">Client</span>    
                </span>
                <div class="col-sm-9" style="vertical-align: top;">
                    @(Html.CheckBoxFor(model => model.IsClient, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is the <span style="text-decoration: underline;">point of contact</span> for Client
                </span>
                <div class="col-sm-9">
                    @(Html.CheckBoxFor(model => model.IsClientContact, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is <span style="text-decoration: underline;">appointed</span>
                </span>
                <div class="col-sm-9">
                    @(Html.CheckBoxFor(model => model.IsAppointed, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is a <span style="text-decoration: underline;">party</span> to the matter
                </span>
                <div class="col-sm-9">
                    @(Html.CheckBoxFor(model => model.IsParty, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    <span style="text-decoration: underline;">Title</span> for party (e.g., Defendant, Petitioner, etc.)
                </span>
                <div class="col-sm-9">
                    @(Html.TextBoxFor(model => model.PartyTitle, new { @class = "form-control" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is a <span style="text-decoration: underline;">judge</span>
                </span>
                <div class="col-sm-9">
                    @(Html.CheckBoxFor(model => model.IsJudge, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is a <span style="text-decoration: underline;">witness</span>
                </span>
                <div class="col-sm-9">
                    @(Html.CheckBoxFor(model => model.IsWitness, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is an <span style="text-decoration: underline;">attorney</span> for another contact
                </span>
                <div class="col-sm-9">
                    @(Html.CheckBoxFor(model => model.IsAttorney, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact that <span style="text-decoration: underline;">attorney is representing</span>
                </span>
                <div class="col-sm-9">
                    @(Html.HiddenFor(model => model.AttorneyFor.Id))
                    @(Html.TextBoxFor(model => model.AttorneyFor.DisplayName, new { @class = "form-control" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is the <span style="text-decoration: underline;">lead attorney</span>
                </span>
                <div class="col-sm-9">
                    @(Html.CheckBoxFor(model => model.IsLeadAttorney, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is <span style="text-decoration: underline;">support staff</span> for contact
                </span>
                <div class="col-sm-9">
                    @(Html.CheckBoxFor(model => model.IsSupportStaff, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    <span style="text-decoration: underline;">Support staff</span> for contact
                </span>
                <div class="col-sm-9">
                    @(Html.HiddenFor(model => model.SupportStaffFor.Id))
                    @(Html.TextBoxFor(model => model.SupportStaffFor.DisplayName, new { @class = "form-control" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    Contact is a <span style="text-decoration: underline;">third party payor</span>
                </span>
                <div class="col-sm-9">
                    @(Html.CheckBoxFor(model => model.IsThirdPartyPayor, new { @class = "form-control", @style = "width: 50px; display: inline;" }))
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-3">
                    <span style="text-decoration: underline;">Third party payor</span> for contact
                </span>
                <div class="col-sm-9">
                    @(Html.HiddenFor(model => model.ThirdPartyPayorFor.Id))
                    @(Html.TextBoxFor(model => model.ThirdPartyPayorFor.DisplayName, new { @class = "form-control" }))
                </div>
            </div>
        </div>
    </div>

    <p>
        <input type="submit" value="Save" />
    </p>
}