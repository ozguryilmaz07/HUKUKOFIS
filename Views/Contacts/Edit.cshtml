@model OpenLawOffice.Web.ViewModels.Contacts.ContactViewModel

@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Edit Contacts";
    ViewBag.PageTitle = "Edit Contacts";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Contacts">Contacts</a></li>
        <li>Contact: <a href="/Contacts/Details/@Model.Id">@(Model.DisplayName)</a></li>
        <li><a href="/Contacts/Edit/@(Model.Id)" class="active">Edit</a></li>
    </ul>
}

<script language="javascript">
    $(function () {
        $("#IsOurEmployee").change(function () {
            if ($(this).is(":checked")) {
                $("#BillingPane").show();
            } else {
                $("#BillingPane").hide();
                $("#BillingRate_Id").val([]);
            }
        });
        @if (Model.IsOurEmployee)
        {
            <text>
        $("#BillingPane").show();
        </text>
        } else {
            <text>
        $("#BillingPane").hide();
        </text>
        }
    });

    $(function () {
        $("#new").click(function () {
            window.location = '/Contacts/Create';
        })
        $("#details").click(function () {
            window.location = '/Contacts/Details/@(Model.Id)';
        })
        $("#edit").click(function () {
            window.location = '/Contacts/Edit/@(Model.Id)';
        })
        $("#list").click(function () {
            window.location = '/Contacts';
        })
        $("#conflicts").click(function () {
            window.location = '/Contacts/Conflicts/@(Model.Id)';
        })
        $("#matters").click(function () {
            window.location = '/Contacts/Matters/@(Model.Id)';
        })
        $("#tasks").click(function () {
            window.location = '/Contacts/Tasks/@(Model.Id)';
        })
    })
</script>

<div class="container-fluid">
    <div class="row text-right">
        <div class="btn-group">
            <button id="new" class="btn btn-sm btn-primary"><span class="fa fa-plus"></span> New Contact</button>
            <button id="details" class="btn btn-sm btn-primary"><span class="fa fa-info"></span> Detail</button>
            <button id="edit" class="btn btn-sm btn-primary"><span class="fa fa-pencil"></span> Edit</button>
            <button id="list" class="btn btn-sm btn-primary"><span class="fa fa-list"></span> List</button>
            <button id="conflicts" class="btn btn-sm btn-primary"><span class="fa fa-shield"></span> Conflicts</button>
            <button id="matters" class="btn btn-sm btn-primary"><span class="fa fa-briefcase"></span> Matters</button>
            <button id="tasks" class="btn btn-sm btn-primary"><span class="fa fa-tasks"></span> Tasks</button>
        </div>
    </div>
</div>

@using (Html.BeginForm("Edit", "Contacts", FormMethod.Post, new { @class = "form-horizontal", @role = "form" }))
{
    @(Html.ValidationSummary(true))
    
    <div class="panel panel-default">
        <div class="panel-heading">
            @Model.DisplayName
        </div>
        <div class="panel-body">
            <h4>Classification</h4>
            <div class="form-group">
                <span class="control-label col-sm-2">Our Employee</span>
                <div class="col-sm-10" style="padding-top: 7px;">
                    @(Html.CheckBoxFor(model => model.IsOurEmployee))Check to indicate that this contact is employed by your company giving them rights
                    to bill within this system.
                    @(Html.ValidationMessageFor(model => model.IsOurEmployee))
                    <table class="detail_table" style="margin-top: 5px;" id="BillingPane">
                        <thead style="font-weight: bold;">
                            <tr>
                                <td colspan="2">
                                    Billing Details
                                </td>
                            </tr>
                        </thead>
                        <tr>
                            <td class="display-label" style="width: 150px;">
                                Billing Rate
                            </td>
                            <td class="display-field">
                                @(Html.DropDownListFor(model => model.BillingRate.Id,
                new SelectList(ViewBag.BillingRateList, "Id", "Title"),
                new { @size = 5, @style = "width: 100%" }))
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="form-group">
                <span class="control-label col-sm-2">Organization</span>
                <div class="col-sm-10" style="padding-top: 7px;">
                    @(Html.CheckBoxFor(model => model.IsOrganization))Check to indicate that this contact is for an organization, not an individual.
                </div>
            </div>

            <h4>Name</h4>
            <div class="row">
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">First</span>
                        @(Html.TextBoxFor(m => m.GivenName, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">Middle</span>
                        @(Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">Last</span>
                        @(Html.TextBoxFor(m => m.Surname, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">Generation</span>
                        @(Html.TextBoxFor(m => m.Generation, new { @class = "form-control" }))
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">Display Name<span class="required-field" title="Required Field">*</span></span>
                        @(Html.TextBoxFor(m => m.DisplayName, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">Referred By</span>
                        @(Html.TextBoxFor(m => m.ReferredByName, new { @class = "form-control" }))
                    </div>
                </div>
            </div>

            <h4>Contact Information</h4>
            <div class="row">
                <div class="col-sm-3">
                    @(Html.HiddenFor(m => m.Email1DisplayName, new { @value = "Email" }))
                    <div class="input-group">
                        <span class="input-group-addon">Email</span>
                        <input type="email" class="form-control" id="Email1EmailAddress" name="Email1EmailAddress" value="@Model.Email1EmailAddress" />
                    </div>
                </div>
                <div class="col-sm-3">
                    @(Html.HiddenFor(m => m.Telephone1DisplayName, new { @value = "Primary" }))
                    <div class="input-group">
                        <span class="input-group-addon">Phone 1</span>
                        <input type="tel" class="form-control" id="Telephone1TelephoneNumber" name="Telephone1TelephoneNumber" value="@Model.Telephone1TelephoneNumber" />
                    </div>
                </div>
                <div class="col-sm-3">
                    @(Html.HiddenFor(m => m.Telephone2DisplayName, new { @value = "Secondary" }))
                    <div class="input-group">
                        <span class="input-group-addon">Phone 2</span>
                        <input type="tel" class="form-control" id="Telephone2TelephoneNumber" name="Telephone2TelephoneNumber" value="@Model.Telephone2TelephoneNumber" />
                    </div>
                </div>
                <div class="col-sm-3">
                    @(Html.HiddenFor(m => m.Fax1DisplayName, new { @value = "Fax" }))
                    <div class="input-group">
                        <span class="input-group-addon">Fax</span>
                        <input type="tel" class="form-control" id="Fax1FaxNumber" name="Fax1FaxNumber" value="@Model.Fax1FaxNumber" />
                    </div>
                </div>
            </div>

            <h4>Mailing Address</h4>
            @(Html.HiddenFor(m => m.Address1DisplayName, new { @value = "Mailing Address" }))
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">Line 1</span>
                        @(Html.TextBoxFor(m => m.Address1AddressStreet, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">Line 2</span>
                        @(Html.TextBoxFor(m => m.Address1AddressLine2, new { @class = "form-control" }))
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">City</span>
                        @(Html.TextBoxFor(m => m.Address1AddressCity, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">State</span>
                        @(Html.TextBoxFor(m => m.Address1AddressStateOrProvince, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">Zip</span>
                        @(Html.TextBoxFor(m => m.Address1AddressPostalCode, new { @class = "form-control" }))
                    </div>
                </div>
            </div>

            <h4>Physical Address</h4>
            @(Html.HiddenFor(m => m.Address1DisplayName, new { @value = "Physical Address" }))
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">Line 1</span>
                        @(Html.TextBoxFor(m => m.Address2AddressStreet, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">Line 2</span>
                        @(Html.TextBoxFor(m => m.Address2AddressLine2, new { @class = "form-control" }))
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">City</span>
                        @(Html.TextBoxFor(m => m.Address2AddressCity, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">State</span>
                        @(Html.TextBoxFor(m => m.Address2AddressStateOrProvince, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">Zip</span>
                        @(Html.TextBoxFor(m => m.Address2AddressPostalCode, new { @class = "form-control" }))
                    </div>
                </div>
            </div>


            <h4>Personal Details</h4>
            <div class="row">
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">Gender</span>
                        <select id="Gender" name="Gender" class="form-control">
                            <option value="" @if (Model.Gender != "Male" && Model.Gender != "Female") { <text> selected</text>}></option>
                            <option value="Male" @if (Model.Gender == "Male") { <text> selected</text>}>Male</option>
                            <option value="Female" @if (Model.Gender == "Female") { <text> selected</text>}>Female</option>
                        </select>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">Birthday</span>
                        <input type="date" class="form-control" id="Birthday" name="Birthday" value="@if (Model.Birthday.HasValue) {<text>@Model.Birthday.Value.ToString("yyyy-MM-dd")</text>}" />
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">Spouse's Name</span>
                        @(Html.TextBoxFor(m => m.SpouseName, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">Wedding</span>
                        <input type="date" class="form-control" id="Wedding" name="Wedding" value="@if (Model.Wedding.HasValue) {<text>@Model.Wedding.Value.ToString("yyyy-MM-dd")</text>}" />
                    </div>
                </div>
            </div>

            <h4>Professional Information</h4>
            <div class="row">
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">Company Name</span>
                        @(Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">Title</span>
                        @(Html.TextBoxFor(m => m.Title, new { @class = "form-control" }))
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">Bar Number</span>
                        @(Html.TextBoxFor(m => m.BarNumber, new { @class = "form-control" }))
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-12 text-center">
                    <button type="submit" class="btn btn-default btn-lg" style="margin-top: 10px; width: 200px;">Submit</button>
                </div>
            </div>
        </div>
    </div>
}
