@model OpenLawOffice.Web.ViewModels.Contacts.ConflictViewModel

@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewBag.Title = "Conflicts Check for " + Model.Contact.DisplayName;
    ViewBag.PageTitle = "Conflicts Check for " + Model.Contact.DisplayName;
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a href="/Contacts">Contacts</a></li>
        <li>Contact: <a href="/Contacts/Details/@(Model.Contact.Id)">@(Model.Contact.DisplayName)</a></li>
        <li><a href="/Contacts/Conflicts/@(Model.Contact.Id)" class="active">Conflicts Check</a></li>
    </ul>
}

<script type="text/javascript">
    $(function () {
        $("#new").click(function () {
            window.location = '/Contacts/Create';
        })
        $("#details").click(function () {
            window.location = '/Contacts/Details/@(Model.Contact.Id)';
        })
        $("#edit").click(function () {
            window.location = '/Contacts/Edit/@(Model.Contact.Id)';
        })
        $("#list").click(function () {
            window.location = '/Contacts';
        })
        $("#conflicts").click(function () {
            window.location = '/Contacts/Conflicts/@(Model.Contact.Id)';
        })
        $("#matters").click(function () {
            window.location = '/Contacts/Matters/@(Model.Contact.Id)';
        })
        $("#tasks").click(function () {
            window.location = '/Contacts/Tasks/@(Model.Contact.Id)';
        })
    })
</script>

<div class="container-fluid">
    <div class="row text-right">
        <div class="btn-group">
            <button id="new" class="btn btn-sm btn-primary"><span class="fa fa-plus"></span> New Contact</button>
            <button id="details" class="btn btn-sm btn-primary"><span class="fa fa-info"></span> Detail</button>
            <button id="edit" class="btn btn-sm btn-primary"><span class="fa fa-pencil"></span> Edit</button>
            <button id="list" class="btn btn-sm btn-primary"><span class="fa fa-list"></span> List</button>
            <button id="conflicts" class="btn btn-sm btn-primary"><span class="fa fa-shield"></span> Conflicts</button>
            <button id="matters" class="btn btn-sm btn-primary"><span class="fa fa-briefcase"></span> Matters</button>
            <button id="tasks" class="btn btn-sm btn-primary"><span class="fa fa-tasks"></span> Tasks</button>
        </div>
    </div>
</div>

<div style="margin-bottom: 15px;">
    Below are the contacts which have been involved in matters with
    @(Model.Contact.DisplayName). Please review each entry for conflicts.
</div>

@foreach (var mRelation in Model.Matters)
{
<div class="panel panel-default">
    <div class="panel-heading">
        @(Html.ActionLink(mRelation.Matter.Title, "Details", "Matters", new { id = mRelation.Matter.Id }, null))
    </div>
    <div class="panel-body">
        <table class="table table-striped table-condensed table-hover table-text-small">
            <thead>
                <tr>
                    <th style="text-align: center;">
                        Display Name
                    </th>
                    <th style="text-align: center;">
                        Role(s)
                    </th>
                </tr>
            </thead>
            <tbody>
            @foreach (var matterContact in mRelation.MatterContacts)
            {
                <tr>
                    <td>
                        @(Html.ActionLink(matterContact.Contact.DisplayName, "Details", new { id = matterContact.Contact.Id }))
                    </td>
                    <td>
                    @{ 
                        List<string> vals = new List<string>();
                        if (matterContact.IsClient)
                        {
                            vals.Add("Client");
                        }
                        else if (matterContact.IsClientContact)
                        {
                            vals.Add("Client Contact Person");
                        }
                        else if (matterContact.IsAppointed)
                        {
                            vals.Add("Appointed");
                        }
                        else if (matterContact.IsParty)
                        {
                            vals.Add("Party");
                        }
                        else if (matterContact.IsJudge)
                        {
                            vals.Add("Judge");
                        }
                        else if (matterContact.IsWitness)
                        {
                            vals.Add("Witness");
                        }
                        else if (matterContact.IsAttorney)
                        {
                            vals.Add("Attorney");
                        }
                        else if (matterContact.IsSupportStaff)
                        {
                            vals.Add("Support Staff");
                        }
                        else if (matterContact.IsThirdPartyPayor)
                        {
                            vals.Add("3rd Party Payor");
                        }
                        <text>@(string.Join(", ", vals.ToArray()))</text>
                    }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>
}